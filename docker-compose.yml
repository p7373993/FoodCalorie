version: '3.8'

services:
  # ðŸŽ¨ Frontend (Next.js)
  frontend:
    build:
      context: ./project1/frontend
      dockerfile: Dockerfile
    container_name: food-calorie-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_ML_API_URL=http://localhost:8001
    volumes:
      - ./project1/frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
      - ml-server
    restart: unless-stopped
    networks:
      - food-calorie-network

  # ðŸ”§ Backend (Django)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: food-calorie-backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ML_SERVER_URL=http://ml-server:8001
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
    depends_on:
      - redis
      - celery
    restart: unless-stopped
    networks:
      - food-calorie-network

  # ðŸ¤– ML Server (AI Models)
  ml-server:
    build:
      context: ./MLServer
      dockerfile: Dockerfile
    container_name: food-calorie-ml-server
    ports:
      - "8001:8001"
    environment:
      - DEBUG_MODE=false
      - ENABLE_MULTIMODAL=true
      - LLM_PROVIDER=gemini
      - LLM_MODEL_NAME=gemini-2.5-flash
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    env_file:
      - ./MLServer/.env
    volumes:
      - ./MLServer/logs:/app/logs
      - ./MLServer/results:/app/results
      - ./MLServer/data:/app/data
      - ./MLServer/weights:/app/weights
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - food-calorie-network

  # ðŸ“Š Redis (Cache & Message Broker)
  redis:
    image: redis:7-alpine
    container_name: food-calorie-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - food-calorie-network

  # âš¡ Celery Worker (Background Tasks)
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: food-calorie-celery
    command: celery -A config worker -l info --pool=solo
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ML_SERVER_URL=http://ml-server:8001
    restart: unless-stopped
    networks:
      - food-calorie-network

volumes:
  redis_data:

networks:
  food-calorie-network:
    driver: bridge